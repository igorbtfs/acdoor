# docker-compose.yml
version: '3.8'

services:
  # Container do Banco de Dados PostgreSQL
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    # Verifica a saúde do container do banco de dados
    healthcheck:
      # Comando que verifica se o Postgres está pronto para aceitar conexões
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s      # Verifica a cada 5 segundos
      timeout: 5s       # Espera no máximo 5 segundos pela resposta
      retries: 5        # Tenta 5 vezes antes de marcar como "unhealthy"

  # Container da Aplicação Django
  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - staticfiles_volume:/app/staticfiles
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  # Container do Nginx (Reverse Proxy)
  nginx:
    image: nginx:1.19.0-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - staticfiles_volume:/app/staticfiles
    depends_on:
      - web

volumes:
  postgres_data:
  staticfiles_volume:
